"use strict";function _createForOfIteratorHelper(e,t){var r,n,o,a,u="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(u)return n=!(r=!0),{s:function(){u=u.call(e)},n:function(){var e=u.next();return r=e.done,e},e:function(e){n=!0,o=e},f:function(){try{r||null==u.return||u.return()}finally{if(n)throw o}}};if(Array.isArray(e)||(u=_unsupportedIterableToArray(e))||t&&e&&"number"==typeof e.length)return u&&(e=u),a=0,{s:t=function(){},n:function(){return a>=e.length?{done:!0}:{done:!1,value:e[a++]}},e:function(e){throw e},f:t};throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(e,t){var r;if(e)return"string"==typeof e?_arrayLikeToArray(e,t):"Map"===(r="Object"===(r=Object.prototype.toString.call(e).slice(8,-1))&&e.constructor?e.constructor.name:r)||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?_arrayLikeToArray(e,t):void 0}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}var summaryUl=document.querySelector(".component__summary-details"),liTemp=document.querySelector(".li-temp"),fetchData=function(){fetch("../data.json").then(function(e){return e.json()}).then(function(e){return summaryListFiller(e)})},summaryListFiller=function(e){var t,r=_createForOfIteratorHelper(e);try{for(r.s();!(t=r.n()).done;){var n=t.value,o=liTemp.content.cloneNode(!0);o.querySelector(".component__summary-item-icon").src=n.icon,o.querySelector(".component__summary-item-name").textContent=n.category,o.querySelector(".component__summary-item-score--value").textContent=n.score,summaryUl.append(o)}}catch(e){r.e(e)}finally{r.f()}};document.addEventListener("DOMContentLoaded",function(){fetchData()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdC5qcyJdLCJuYW1lcyI6WyJzdW1tYXJ5VWwiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJsaVRlbXAiLCJmZXRjaERhdGEiLCJmZXRjaCIsInRoZW4iLCJkYXRhIiwic3VtbWFyeUxpc3RGaWxsZXIiLCJfaXRlcmF0b3IiLCJfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlciIsInMiLCJfc3RlcCIsIm4iLCJkb25lIiwiZWwiLCJ2YWx1ZSIsInNpbmdsZUxpIiwiY2xvbmVOb2RlIiwic3JjIiwiaWNvbiIsInRleHRDb250ZW50IiwiY2F0ZWdvcnkiLCJzY29yZSIsImFwcGVuZCIsImVyciIsImUiLCJmIiwiYWRkRXZlbnRMaXN0ZW5lciJdLCJtYXBwaW5ncyI6Im9vQ0FBQSxJQUFNQSxVQUFZQyxTQUFTQyxjQUFjLDZCQUE2QixFQUNoRUMsT0FBU0YsU0FBU0MsY0FBYyxVQUFVLEVBRTFDRSxVQUFZLFdBQ2pCQyxNQUFNLGNBQWMsRUFKckJDLEtBQU1OLFNBQUFBLEdBQVlDLE9BQUFBLEVBQVNDLEtBQUFBLENBQUFBLENBQUFBLEVBQzNCSSxLQUFNSCxTQUFBQSxHQUFTRixPQUFBQSxrQkFBdUJNLENBQUEsQ0FBQSxDQUFBLENBRXRDLEVBRWlCQyxrQkFBb0IsU0FBQUQsR0FBQSxJQUM1QkEsRUFENEJFLEVBQUFDLDJCQUM3QkgsQ0FBQ0EsRUFBQUEsSUFJUixJQUFBRSxFQUFBRSxFQUFBLEVBQUEsRUFBQUMsRUFBQUgsRUFBQUksRUFBQSxHQUFBQyxNQUpZLENBQUEsSUFBTEMsRUFBQUgsRUFBQUksTUFBS0MsRUFBS1QsT0FBQUEsUUFBdUJVLFVBQUEsQ0FBQSxDQUFBLEVBQUFELEVBQUNmLGNBQUEsK0JBQUEsRUFBQWlCLElBQUFKLEVBQUFLLEtBQ3pDSCxFQUFBZixjQUFBLCtCQUFBLEVBQUFtQixZQUFBTixFQUFBTyxTQUVETCxFQUFNVCxjQUFvQix1Q0FBVSxFQUFBYSxZQUFBTixFQUFBUSxNQU9sQ3ZCLFVBTm9Cd0IsT0FBQVAsQ0FBQSxDQU9yQixDQVBxQixDQUFBLE1BQUFRLEdBQUFoQixFQUFBaUIsRUFBQUQsQ0FBQSxDQUFBLENBQUEsUUFBQWhCLEVBQUFrQixFQUFBLENBQUEsQ0FRdEIsRUFVQTFCLFNBQUEyQixpQkFBQSxtQkFBQSxXQUNBeEIsVUFBQSxDQUNBLENBQUEiLCJmaWxlIjoic2NyaXB0Lm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHN1bW1hcnlVbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jb21wb25lbnRfX3N1bW1hcnktZGV0YWlscycpO1xyXG5jb25zdCBsaVRlbXAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubGktdGVtcCcpO1xyXG5cclxuY29uc3QgZmV0Y2hEYXRhID0gKCkgPT4ge1xyXG5cdGZldGNoKCcuLi9kYXRhLmpzb24nKVxyXG5cdFx0LnRoZW4oKHJlc3BvbnNlKSA9PiByZXNwb25zZS5qc29uKCkpXHJcblx0XHQudGhlbigoZGF0YSkgPT4gc3VtbWFyeUxpc3RGaWxsZXIoZGF0YSkpO1xyXG59O1xyXG5cclxuY29uc3Qgc3VtbWFyeUxpc3RGaWxsZXIgPSAoZGF0YSkgPT4ge1xyXG5cdGZvciAoY29uc3QgZWwgb2YgZGF0YSkge1xyXG5cdFx0Y29uc3Qgc2luZ2xlTGkgPSBsaVRlbXAuY29udGVudC5jbG9uZU5vZGUodHJ1ZSk7XHJcblx0XHRzaW5nbGVMaS5xdWVyeVNlbGVjdG9yKCcuY29tcG9uZW50X19zdW1tYXJ5LWl0ZW0taWNvbicpLnNyYyA9IGVsLmljb247XHJcblx0XHRzaW5nbGVMaS5xdWVyeVNlbGVjdG9yKCcuY29tcG9uZW50X19zdW1tYXJ5LWl0ZW0tbmFtZScpLnRleHRDb250ZW50ID0gZWwuY2F0ZWdvcnk7XHJcblx0XHRzaW5nbGVMaS5xdWVyeVNlbGVjdG9yKCcuY29tcG9uZW50X19zdW1tYXJ5LWl0ZW0tc2NvcmUtLXZhbHVlJykudGV4dENvbnRlbnQgPSBlbC5zY29yZTtcclxuXHJcblx0XHRzdW1tYXJ5VWwuYXBwZW5kKHNpbmdsZUxpKTtcclxuXHR9XHJcbn07XHJcblxyXG4vLyBjb25zdCBhZGRpbmdDbGFzc0NvbG9yID0gKCkgPT4ge1xyXG4vLyBcdGNvbnN0IGxpQ29sbGVjdGlvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ2NvbXBvbmVudF9fc3VtbWFyeS1pdGVtJyk7XHJcblxyXG4vLyBcdGZvciAodmFyIGkgPSAwOyBpIDwgbGlDb2xsZWN0aW9uLmxlbmd0aDsgaSsrKSB7XHJcbi8vIFx0XHRjb25zb2xlLmxvZyhsaUNvbGxlY3Rpb25baV0pO1xyXG4vLyBcdH1cclxuLy8gfTtcclxuXHJcbi8vIHN3aXRjaCAoZXhwcikge1xyXG4vLyBcdGNhc2UgJ09yYW5nZXMnOlxyXG4vLyBcdFx0Y29uc29sZS5sb2coJ09yYW5nZXMgYXJlICQwLjU5IGEgcG91bmQuJyk7XHJcbi8vIFx0XHRicmVhaztcclxuLy8gXHRjYXNlICdNYW5nb2VzJzpcclxuLy8gXHRjYXNlICdQYXBheWFzJzpcclxuLy8gXHRcdGNvbnNvbGUubG9nKCdNYW5nb2VzIGFuZCBwYXBheWFzIGFyZSAkMi43OSBhIHBvdW5kLicpO1xyXG4vLyBcdFx0Ly8gRXhwZWN0ZWQgb3V0cHV0OiBcIk1hbmdvZXMgYW5kIHBhcGF5YXMgYXJlICQyLjc5IGEgcG91bmQuXCJcclxuLy8gXHRcdGJyZWFrO1xyXG4vLyBcdGRlZmF1bHQ6XHJcbi8vIFx0XHRjb25zb2xlLmxvZyhgU29ycnksIHdlIGFyZSBvdXQgb2YgJHtleHByfS5gKTtcclxuLy8gfVxyXG5cclxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsICgpID0+IHtcclxuXHRmZXRjaERhdGEoKTtcclxufSk7XHJcbiJdfQ==
